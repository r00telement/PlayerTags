//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlayerTags.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PlayerTags.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activity properties ähnelt.
        /// </summary>
        public static string Loc_ActivityCategory {
            get {
                return ResourceManager.GetString("Loc_ActivityCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Below options to be apply for ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Everywhere ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_All {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The most options below will apply everywhere you are. They will be the same in Overworld, in PvE Duties and PvP Duties. Your options defined specifically for another context will be overwritten. ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_All_Description {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_All_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No Duty ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_None {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The most options below will apply only if you are outside of any duty. ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_None_Description {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_None_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PvE Duties ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_PveDuty {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_PveDuty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The most options below will apply only to PvE Duties. ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_PveDuty_Description {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_PveDuty_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PvP Duties ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_PvpDuty {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_PvpDuty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The most options below will apply only to PvP Duties. ähnelt.
        /// </summary>
        public static string Loc_ActivityContextSelection_PvpDuty_Description {
            get {
                return ResourceManager.GetString("Loc_ActivityContextSelection_PvpDuty_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom ähnelt.
        /// </summary>
        public static string Loc_AllCustomTags {
            get {
                return ResourceManager.GetString("Loc_AllCustomTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Roles ähnelt.
        /// </summary>
        public static string Loc_AllRoleTags {
            get {
                return ResourceManager.GetString("Loc_AllRoleTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string Loc_AllTags {
            get {
                return ResourceManager.GetString("Loc_AllTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Chat Options ähnelt.
        /// </summary>
        public static string Loc_ChatFeatureCategory {
            get {
                return ResourceManager.GetString("Loc_ChatFeatureCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shows the config window for Player Tags ähnelt.
        /// </summary>
        public static string Loc_Command_playertags {
            get {
                return ResourceManager.GetString("Loc_Command_playertags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom id ähnelt.
        /// </summary>
        public static string Loc_CustomId {
            get {
                return ResourceManager.GetString("Loc_CustomId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom ähnelt.
        /// </summary>
        public static string Loc_CustomTags {
            get {
                return ResourceManager.GetString("Loc_CustomTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Handling for dead players ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gray out ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling_GrayOut {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling_GrayOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply any tag but gray out the nameplate. ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling_GrayOut_Description {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling_GrayOut_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling_Ignore {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling_Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t process dead players and don&apos;t apply any tag for. ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling_Ignore_Description {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling_Ignore_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Include ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling_Include {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling_Include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Handle dead players as they are alive. No difference between dead and alive players. ähnelt.
        /// </summary>
        public static string Loc_DeadPlayerHandling_Include_Description {
            get {
                return ResourceManager.GetString("Loc_DeadPlayerHandling_Include_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Template ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Basic ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Basic {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Basic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same as Empty, but includes a very basic pre-configuration for formatting and coloring.
        ///Can also be used if you want to make your own configuration but want basic formatting. ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Basic_Description {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Basic_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Here you can choose the template for all the settings below.
        ///The template is used as basic set of properties. Every change you are making is what get saved. But all options from this template will not be saved.
        ///This helps you by not needing to overwrite so much properties - or by doing your completely own configuration without a template.
        ///
        ///Warning:
        ///Changing this can cause properties to be resetted. You may loose a part of your configuration.
        ///After you changed this, ensure everything is setted up how y [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Description {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Full {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Full", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show the job tag with color and also color the player name element. ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Full_Description {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Full_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_None {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No single configuration made. This is a completely empty template.
        ///Use this if you want to to have every option under your control or just want to make only a few configurations. ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_None_Description {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_None_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simple ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Simple {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Simple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shows the job tag with color and the role icon by replacing the title. ähnelt.
        /// </summary>
        public static string Loc_DefaultPluginDataTemplate_Simple_Description {
            get {
                return ResourceManager.GetString("Loc_DefaultPluginDataTemplate_Simple_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Melee ähnelt.
        /// </summary>
        public static string Loc_DpsRole_Melee {
            get {
                return ResourceManager.GetString("Loc_DpsRole_Melee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ranged ähnelt.
        /// </summary>
        public static string Loc_DpsRole_Ranged {
            get {
                return ResourceManager.GetString("Loc_DpsRole_Ranged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to players ähnelt.
        /// </summary>
        public static string Loc_GameObjectNamesToApplyTo {
            get {
                return ResourceManager.GetString("Loc_GameObjectNamesToApplyTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A list of players to add tags to, separated by commas or semi-colons. E.g. &quot;Cloud Strife, Tifa Lockhart&quot;. ähnelt.
        /// </summary>
        public static string Loc_GameObjectNamesToApplyTo_Description {
            get {
                return ResourceManager.GetString("Loc_GameObjectNamesToApplyTo_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General properties ähnelt.
        /// </summary>
        public static string Loc_GeneralCategory {
            get {
                return ResourceManager.GetString("Loc_GeneralCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Icon ähnelt.
        /// </summary>
        public static string Loc_Icon {
            get {
                return ResourceManager.GetString("Loc_Icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The icon that will be displayed. ähnelt.
        /// </summary>
        public static string Loc_Icon_Description {
            get {
                return ResourceManager.GetString("Loc_Icon_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Icon properties ähnelt.
        /// </summary>
        public static string Loc_IconCategory {
            get {
                return ResourceManager.GetString("Loc_IconCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert behind group number prefix in chat ähnelt.
        /// </summary>
        public static string Loc_InsertBehindNumberPrefixInChat {
            get {
                return ResourceManager.GetString("Loc_InsertBehindNumberPrefixInChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If enabled, the Tag and Icon will get inserted behind the Group/Alliance number prefix in Chat instead of before.  ähnelt.
        /// </summary>
        public static string Loc_InsertBehindNumberPrefixInChat_Description {
            get {
                return ResourceManager.GetString("Loc_InsertBehindNumberPrefixInChat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply tags to all chat messages ähnelt.
        /// </summary>
        public static string Loc_IsApplyTagsToAllChatMessagesEnabled {
            get {
                return ResourceManager.GetString("Loc_IsApplyTagsToAllChatMessagesEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applies tags to all chat messages, including non-social messages. ähnelt.
        /// </summary>
        public static string Loc_IsApplyTagsToAllChatMessagesEnabled_Description {
            get {
                return ResourceManager.GetString("Loc_IsApplyTagsToAllChatMessagesEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Context menu integration ähnelt.
        /// </summary>
        public static string Loc_IsCustomTagsContextMenuEnabled {
            get {
                return ResourceManager.GetString("Loc_IsCustomTagsContextMenuEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options will be available in context menus for adding and removing custom tags from players. ähnelt.
        /// </summary>
        public static string Loc_IsCustomTagsContextMenuEnabled_Description {
            get {
                return ResourceManager.GetString("Loc_IsCustomTagsContextMenuEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        public static string Loc_IsEnabled {
            get {
                return ResourceManager.GetString("Loc_IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable the value of this override. ähnelt.
        /// </summary>
        public static string Loc_IsEnabled_Description {
            get {
                return ResourceManager.GetString("Loc_IsEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expanded ähnelt.
        /// </summary>
        public static string Loc_IsExpanded {
            get {
                return ResourceManager.GetString("Loc_IsExpanded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show in chat ähnelt.
        /// </summary>
        public static string Loc_IsIconVisibleInChat {
            get {
                return ResourceManager.GetString("Loc_IsIconVisibleInChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show job icon in nameplates ähnelt.
        /// </summary>
        public static string Loc_IsJobIconVisibleInNameplates {
            get {
                return ResourceManager.GetString("Loc_IsJobIconVisibleInNameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the job icon will be shown in nameplates. ähnelt.
        /// </summary>
        public static string Loc_IsJobIconVisibleInNameplates_Description {
            get {
                return ResourceManager.GetString("Loc_IsJobIconVisibleInNameplates_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply tags to self in chat ähnelt.
        /// </summary>
        public static string Loc_IsLinkSelfInChatEnabled {
            get {
                return ResourceManager.GetString("Loc_IsLinkSelfInChatEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attempts to link your chat name to your character, allowing tags to be applied to self in chat. ähnelt.
        /// </summary>
        public static string Loc_IsLinkSelfInChatEnabled_Description {
            get {
                return ResourceManager.GetString("Loc_IsLinkSelfInChatEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Randomly generate player names ähnelt.
        /// </summary>
        public static string Loc_IsPlayerNameRandomlyGenerated {
            get {
                return ResourceManager.GetString("Loc_IsPlayerNameRandomlyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace every player&apos;s name with a randomly generated one. ähnelt.
        /// </summary>
        public static string Loc_IsPlayerNameRandomlyGenerated_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayerNameRandomlyGenerated_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show alliance members ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabAllianceVisible {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabAllianceVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show alliance members in the players list. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabAllianceVisible_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabAllianceVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show enemies ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabEnemiesVisible {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabEnemiesVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show enemies in the players list. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabEnemiesVisible_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabEnemiesVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show friends ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabFriendsVisible {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabFriendsVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show friends in the players list. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabFriendsVisible_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabFriendsVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Order by proximity ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabOrderedByProximity {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabOrderedByProximity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Players that are closer to you will be ordered towards the top. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabOrderedByProximity_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabOrderedByProximity_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show others ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabOthersVisible {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabOthersVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show others in the players list. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabOthersVisible_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabOthersVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show party members ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabPartyVisible {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabPartyVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show party members in the players list. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabPartyVisible_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabPartyVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show self ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabSelfVisible {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabSelfVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show yourself in the players list. ähnelt.
        /// </summary>
        public static string Loc_IsPlayersTabSelfVisible_Description {
            get {
                return ResourceManager.GetString("Loc_IsPlayersTabSelfVisible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show role icon in Chat ähnelt.
        /// </summary>
        public static string Loc_IsRoleIconVisibleInChat {
            get {
                return ResourceManager.GetString("Loc_IsRoleIconVisibleInChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the role icon will be shown in chat. ähnelt.
        /// </summary>
        public static string Loc_IsRoleIconVisibleInChat_Description {
            get {
                return ResourceManager.GetString("Loc_IsRoleIconVisibleInChat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show role icon in nameplates ähnelt.
        /// </summary>
        public static string Loc_IsRoleIconVisibleInNameplates {
            get {
                return ResourceManager.GetString("Loc_IsRoleIconVisibleInNameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the role icon will be shown in nameplates. ähnelt.
        /// </summary>
        public static string Loc_IsRoleIconVisibleInNameplates_Description {
            get {
                return ResourceManager.GetString("Loc_IsRoleIconVisibleInNameplates_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show role icon in nameplate ähnelt.
        /// </summary>
        public static string Loc_IsRoleJobIconVisibleInNameplates {
            get {
                return ResourceManager.GetString("Loc_IsRoleJobIconVisibleInNameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected ähnelt.
        /// </summary>
        public static string Loc_IsSelected {
            get {
                return ResourceManager.GetString("Loc_IsSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show inherited properties ähnelt.
        /// </summary>
        public static string Loc_IsShowInheritedPropertiesEnabled {
            get {
                return ResourceManager.GetString("Loc_IsShowInheritedPropertiesEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Properties inherited from parent nodes will be shown in the editor. ähnelt.
        /// </summary>
        public static string Loc_IsShowInheritedPropertiesEnabled_Description {
            get {
                return ResourceManager.GetString("Loc_IsShowInheritedPropertiesEnabled_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply color to chat name ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToChatName {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToChatName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the color will be applied to the name in chat. ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToChatName_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToChatName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply color to nameplate free company ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToNameplateFreeCompany {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToNameplateFreeCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the color will be applied to the free company in nameplates. ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToNameplateFreeCompany_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToNameplateFreeCompany_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply color to nameplate name ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToNameplateName {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToNameplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the color will be applied to the name in nameplates. ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToNameplateName_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToNameplateName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply color to nameplate title ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToNameplateTitle {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToNameplateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the color will be applied to title in nameplates. ähnelt.
        /// </summary>
        public static string Loc_IsTextColorAppliedToNameplateTitle_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextColorAppliedToNameplateTitle_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Italic ähnelt.
        /// </summary>
        public static string Loc_IsTextItalic {
            get {
                return ResourceManager.GetString("Loc_IsTextItalic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the text will be italic. ähnelt.
        /// </summary>
        public static string Loc_IsTextItalic_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextItalic_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show in chat ähnelt.
        /// </summary>
        public static string Loc_IsTextVisibleInChat {
            get {
                return ResourceManager.GetString("Loc_IsTextVisibleInChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the text will be shown in chat. ähnelt.
        /// </summary>
        public static string Loc_IsTextVisibleInChat_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextVisibleInChat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show in nameplates ähnelt.
        /// </summary>
        public static string Loc_IsTextVisibleInNameplates {
            get {
                return ResourceManager.GetString("Loc_IsTextVisibleInNameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the text will be shown in nameplates. ähnelt.
        /// </summary>
        public static string Loc_IsTextVisibleInNameplates_Description {
            get {
                return ResourceManager.GetString("Loc_IsTextVisibleInNameplates_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show for alliance members ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForAlliancePlayers {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForAlliancePlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible for alliance members who are not in the current party. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForAlliancePlayers_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForAlliancePlayers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show for enemies ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForEnemyPlayers {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForEnemyPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible for enemies in pvp. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForEnemyPlayers_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForEnemyPlayers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show for friends ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForFriendPlayers {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForFriendPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible for friends. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForFriendPlayers_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForFriendPlayers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show for others ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForOtherPlayers {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForOtherPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible for players in other circumstances for which there is no specific option. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForOtherPlayers_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForOtherPlayers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show for party members ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForPartyPlayers {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForPartyPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible for party members. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForPartyPlayers_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForPartyPlayers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show for self ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForSelf {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible for the local player. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleForSelf_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleForSelf_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show elsewhere ähnelt.
        /// </summary>
        public static string Loc_IsVisibleInOverworld {
            get {
                return ResourceManager.GetString("Loc_IsVisibleInOverworld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible in other circumstances for which there is no specific option. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleInOverworld_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleInOverworld_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show in pve duties ähnelt.
        /// </summary>
        public static string Loc_IsVisibleInPveDuties {
            get {
                return ResourceManager.GetString("Loc_IsVisibleInPveDuties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible in pve duties. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleInPveDuties_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleInPveDuties_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show in pvp duties ähnelt.
        /// </summary>
        public static string Loc_IsVisibleInPvpDuties {
            get {
                return ResourceManager.GetString("Loc_IsVisibleInPvpDuties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Whether the tag should be visible in pvp duties. ähnelt.
        /// </summary>
        public static string Loc_IsVisibleInPvpDuties_Description {
            get {
                return ResourceManager.GetString("Loc_IsVisibleInPvpDuties_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Job icon set ähnelt.
        /// </summary>
        public static string Loc_JobIconSet {
            get {
                return ResourceManager.GetString("Loc_JobIconSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The icon set to use for displaying the job icon. You can also choose the role icon set to display the role icon instead. ähnelt.
        /// </summary>
        public static string Loc_JobIconSet_Description {
            get {
                return ResourceManager.GetString("Loc_JobIconSet_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hand ähnelt.
        /// </summary>
        public static string Loc_LandHandRole_Hand {
            get {
                return ResourceManager.GetString("Loc_LandHandRole_Hand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Land ähnelt.
        /// </summary>
        public static string Loc_LandHandRole_Land {
            get {
                return ResourceManager.GetString("Loc_LandHandRole_Land", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move Status Icon to Nameplate text if possible ähnelt.
        /// </summary>
        public static string Loc_MoveStatusIconToNameplateTextIfPossible {
            get {
                return ResourceManager.GetString("Loc_MoveStatusIconToNameplateTextIfPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If the current status icon is available as Font Icon then move it to the Player Name text in the Nameplate, so there is place for another icon to use, e.g. the job icon. ähnelt.
        /// </summary>
        public static string Loc_MoveStatusIconToNameplateTextIfPossible_Description {
            get {
                return ResourceManager.GetString("Loc_MoveStatusIconToNameplateTextIfPossible_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nameplate properties ähnelt.
        /// </summary>
        public static string Loc_NameplateCategory {
            get {
                return ResourceManager.GetString("Loc_NameplateCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free company ähnelt.
        /// </summary>
        public static string Loc_NameplateElement_FreeCompany {
            get {
                return ResourceManager.GetString("Loc_NameplateElement_FreeCompany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The free company element on nameplates. ähnelt.
        /// </summary>
        public static string Loc_NameplateElement_FreeCompany_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateElement_FreeCompany_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Loc_NameplateElement_Name {
            get {
                return ResourceManager.GetString("Loc_NameplateElement_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The name element on nameplates. ähnelt.
        /// </summary>
        public static string Loc_NameplateElement_Name_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateElement_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title ähnelt.
        /// </summary>
        public static string Loc_NameplateElement_Title {
            get {
                return ResourceManager.GetString("Loc_NameplateElement_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title element on nameplates. ähnelt.
        /// </summary>
        public static string Loc_NameplateElement_Title_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateElement_Title_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free company visibility ähnelt.
        /// </summary>
        public static string Loc_NameplateFreeCompanyVisibility {
            get {
                return ResourceManager.GetString("Loc_NameplateFreeCompanyVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string Loc_NameplateFreeCompanyVisibility_Default {
            get {
                return ResourceManager.GetString("Loc_NameplateFreeCompanyVisibility_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The free company on nameplates will only be visible when the character is in a free company. ähnelt.
        /// </summary>
        public static string Loc_NameplateFreeCompanyVisibility_Default_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateFreeCompanyVisibility_Default_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines whenever the free company element of the nameplate should be visible or not. ähnelt.
        /// </summary>
        public static string Loc_NameplateFreeCompanyVisibility_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateFreeCompanyVisibility_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never visible ähnelt.
        /// </summary>
        public static string Loc_NameplateFreeCompanyVisibility_Never {
            get {
                return ResourceManager.GetString("Loc_NameplateFreeCompanyVisibility_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The free company on nameplates will never be visible. ähnelt.
        /// </summary>
        public static string Loc_NameplateFreeCompanyVisibility_Never_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateFreeCompanyVisibility_Never_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title position ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always above name ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_AlwaysAboveName {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_AlwaysAboveName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will always be positioned above the name. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_AlwaysAboveName_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_AlwaysAboveName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always below name ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_AlwaysBelowName {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_AlwaysBelowName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will always be positioned below the name. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_AlwaysBelowName_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_AlwaysBelowName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_Default {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will be positioned depending on the title. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_Default_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_Default_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the position for the title element of the nameplate. Should it be above or below the name? You can decide! ähnelt.
        /// </summary>
        public static string Loc_NameplateTitlePosition_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitlePosition_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Title visibility ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always visible ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Always {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will always be visible, even when the character does not have a title. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Always_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Always_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Default {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will only be visible when the character has a title. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Default_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Default_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines whenever the title element of the nameplate should be visible or not. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Never visible ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Never {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will never visible. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_Never_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_Never_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only visible when it has tags ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_WhenHasTags {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_WhenHasTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The title on nameplates will only be visible when it has tags. ähnelt.
        /// </summary>
        public static string Loc_NameplateTitleVisibility_WhenHasTags_Description {
            get {
                return ResourceManager.GetString("Loc_NameplateTitleVisibility_WhenHasTags_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Player properties ähnelt.
        /// </summary>
        public static string Loc_PlayerCategory {
            get {
                return ResourceManager.GetString("Loc_PlayerCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Position properties ähnelt.
        /// </summary>
        public static string Loc_PositionCategory {
            get {
                return ResourceManager.GetString("Loc_PositionCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Magical ähnelt.
        /// </summary>
        public static string Loc_RangedDpsRole_Magical {
            get {
                return ResourceManager.GetString("Loc_RangedDpsRole_Magical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Physical ähnelt.
        /// </summary>
        public static string Loc_RangedDpsRole_Physical {
            get {
                return ResourceManager.GetString("Loc_RangedDpsRole_Physical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DPS ähnelt.
        /// </summary>
        public static string Loc_Role_Dps {
            get {
                return ResourceManager.GetString("Loc_Role_Dps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Healer ähnelt.
        /// </summary>
        public static string Loc_Role_Healer {
            get {
                return ResourceManager.GetString("Loc_Role_Healer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Land/Hand ähnelt.
        /// </summary>
        public static string Loc_Role_LandHand {
            get {
                return ResourceManager.GetString("Loc_Role_LandHand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tank ähnelt.
        /// </summary>
        public static string Loc_Role_Tank {
            get {
                return ResourceManager.GetString("Loc_Role_Tank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a custom tag. ähnelt.
        /// </summary>
        public static string Loc_Static_AddCustomTag_Description {
            get {
                return ResourceManager.GetString("Loc_Static_AddCustomTag_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a property override. ähnelt.
        /// </summary>
        public static string Loc_Static_AddPropertyOverride_Description {
            get {
                return ResourceManager.GetString("Loc_Static_AddPropertyOverride_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chat ähnelt.
        /// </summary>
        public static string Loc_Static_Chat {
            get {
                return ResourceManager.GetString("Loc_Static_Chat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chat (Experimental) ähnelt.
        /// </summary>
        public static string Loc_Static_ChatExperimental {
            get {
                return ResourceManager.GetString("Loc_Static_ChatExperimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add tag: {0} ähnelt.
        /// </summary>
        public static string Loc_Static_ContextMenu_AddTag {
            get {
                return ResourceManager.GetString("Loc_Static_ContextMenu_AddTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove tag: {0} ähnelt.
        /// </summary>
        public static string Loc_Static_ContextMenu_RemoveTag {
            get {
                return ResourceManager.GetString("Loc_Static_ContextMenu_RemoveTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Activity Profile ähnelt.
        /// </summary>
        public static string Loc_Static_CurrentActivityProfile {
            get {
                return ResourceManager.GetString("Loc_Static_CurrentActivityProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Development ähnelt.
        /// </summary>
        public static string Loc_Static_Development {
            get {
                return ResourceManager.GetString("Loc_Static_Development", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Experimental ähnelt.
        /// </summary>
        public static string Loc_Static_Experimental {
            get {
                return ResourceManager.GetString("Loc_Static_Experimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add &apos;{0}&apos; to {1}. ähnelt.
        /// </summary>
        public static string Loc_Static_Format_AddTagToPlayer {
            get {
                return ResourceManager.GetString("Loc_Static_Format_AddTagToPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General ähnelt.
        /// </summary>
        public static string Loc_Static_General {
            get {
                return ResourceManager.GetString("Loc_Static_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;Inherited&gt; ähnelt.
        /// </summary>
        public static string Loc_Static_Inherited {
            get {
                return ResourceManager.GetString("Loc_Static_Inherited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nameplates ähnelt.
        /// </summary>
        public static string Loc_Static_Nameplates {
            get {
                return ResourceManager.GetString("Loc_Static_Nameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New tag ähnelt.
        /// </summary>
        public static string Loc_Static_NewTag {
            get {
                return ResourceManager.GetString("Loc_Static_NewTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;No text&gt; ähnelt.
        /// </summary>
        public static string Loc_Static_NoText {
            get {
                return ResourceManager.GetString("Loc_Static_NoText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other (Experimental) ähnelt.
        /// </summary>
        public static string Loc_Static_OtherExperimental {
            get {
                return ResourceManager.GetString("Loc_Static_OtherExperimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Player ähnelt.
        /// </summary>
        public static string Loc_Static_PlayerName {
            get {
                return ResourceManager.GetString("Loc_Static_PlayerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Player Tags ähnelt.
        /// </summary>
        public static string Loc_Static_PluginName {
            get {
                return ResourceManager.GetString("Loc_Static_PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quick Tag ähnelt.
        /// </summary>
        public static string Loc_Static_QuickTag {
            get {
                return ResourceManager.GetString("Loc_Static_QuickTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove this custom tag. ähnelt.
        /// </summary>
        public static string Loc_Static_RemoveCustomTag_Description {
            get {
                return ResourceManager.GetString("Loc_Static_RemoveCustomTag_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove this property override. The value will be inherited from the parent item. ähnelt.
        /// </summary>
        public static string Loc_Static_RemovePropertyOverride_Description {
            get {
                return ResourceManager.GetString("Loc_Static_RemovePropertyOverride_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset all items to their defaults. Custom tags will not be touched. ähnelt.
        /// </summary>
        public static string Loc_Static_ResetAllDefault_Description {
            get {
                return ResourceManager.GetString("Loc_Static_ResetAllDefault_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset this item to its defaults. ähnelt.
        /// </summary>
        public static string Loc_Static_ResetDefault_Description {
            get {
                return ResourceManager.GetString("Loc_Static_ResetDefault_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status Icon Priorizer ähnelt.
        /// </summary>
        public static string Loc_Static_StatusIconPrioList {
            get {
                return ResourceManager.GetString("Loc_Static_StatusIconPrioList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tagged Players ähnelt.
        /// </summary>
        public static string Loc_Static_TaggedPlayers {
            get {
                return ResourceManager.GetString("Loc_Static_TaggedPlayers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tags ähnelt.
        /// </summary>
        public static string Loc_Static_Tags {
            get {
                return ResourceManager.GetString("Loc_Static_Tags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This plugin can modify nameplates and chat. When combined with other plugins that modify these things, you are likely to see unexpected behavior. The load order of your plugins may make a difference. ähnelt.
        /// </summary>
        public static string Loc_Static_WarningMessage {
            get {
                return ResourceManager.GetString("Loc_Static_WarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset to default ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizer_ResetToDefault {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizer_ResetToDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resets all condition sets to the default settings ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizer_ResetToDefault_Description {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizer_ResetToDefault_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset to empty ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizer_ResetToEmpty {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizer_ResetToEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clears all condition sets to an empty collection. None status icons will be priorized. ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizer_ResetToEmpty_Description {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizer_ResetToEmpty_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In Duty ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizerConditionSets_InDuty {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizerConditionSets_InDuty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status icons that should get priorized within duties. ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizerConditionSets_InDuty_Description {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizerConditionSets_InDuty_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In Foray ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizerConditionSets_InForay {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizerConditionSets_InForay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status icons that should get priorized within foraies. ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizerConditionSets_InForay_Description {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizerConditionSets_InForay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overworld ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizerConditionSets_Overworld {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizerConditionSets_Overworld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status icons that should get priorized at overworld. ähnelt.
        /// </summary>
        public static string Loc_StatusIconPriorizerConditionSets_Overworld_Description {
            get {
                return ResourceManager.GetString("Loc_StatusIconPriorizerConditionSets_Overworld_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Busy ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_Busy {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_Busy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disconnecting ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_Disconnecting {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_Disconnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duty Finder ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_DutyFinder {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_DutyFinder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Group Pose ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_GroupPose {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_GroupPose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Idle ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_Idle {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_Idle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In Duty ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_InDuty {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_InDuty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mentor ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_Mentor {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_Mentor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mentor Crafting ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_MentorCrafting {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_MentorCrafting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mentor PvE ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_MentorPvE {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_MentorPvE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mentor PvP ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_MentorPvP {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_MentorPvP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Adventurer ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_NewAdventurer {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_NewAdventurer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Party Leader ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_PartyLeader {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_PartyLeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Party Member ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_PartyMember {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_PartyMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Returner ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_Returner {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_Returner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Role Playing ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_RolePlaying {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_RolePlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Viewing Cutscene ähnelt.
        /// </summary>
        public static string Loc_StatusIcons_ViewingCutscene {
            get {
                return ResourceManager.GetString("Loc_StatusIcons_ViewingCutscene", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After ähnelt.
        /// </summary>
        public static string Loc_TagPosition_After {
            get {
                return ResourceManager.GetString("Loc_TagPosition_After", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display the tag after the target element. ähnelt.
        /// </summary>
        public static string Loc_TagPosition_After_Description {
            get {
                return ResourceManager.GetString("Loc_TagPosition_After_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Before ähnelt.
        /// </summary>
        public static string Loc_TagPosition_Before {
            get {
                return ResourceManager.GetString("Loc_TagPosition_Before", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display the tag before the target element. ähnelt.
        /// </summary>
        public static string Loc_TagPosition_Before_Description {
            get {
                return ResourceManager.GetString("Loc_TagPosition_Before_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace ähnelt.
        /// </summary>
        public static string Loc_TagPosition_Replace {
            get {
                return ResourceManager.GetString("Loc_TagPosition_Replace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace the target element with the tag. ähnelt.
        /// </summary>
        public static string Loc_TagPosition_Replace_Description {
            get {
                return ResourceManager.GetString("Loc_TagPosition_Replace_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Position in chat ähnelt.
        /// </summary>
        public static string Loc_TagPositionInChat {
            get {
                return ResourceManager.GetString("Loc_TagPositionInChat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Where the tag will be positioned in chat. ähnelt.
        /// </summary>
        public static string Loc_TagPositionInChat_Description {
            get {
                return ResourceManager.GetString("Loc_TagPositionInChat_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Position in nameplates ähnelt.
        /// </summary>
        public static string Loc_TagPositionInNameplates {
            get {
                return ResourceManager.GetString("Loc_TagPositionInNameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Where the tag will be positioned in nameplates. ähnelt.
        /// </summary>
        public static string Loc_TagPositionInNameplates_Description {
            get {
                return ResourceManager.GetString("Loc_TagPositionInNameplates_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target in nameplates ähnelt.
        /// </summary>
        public static string Loc_TagTargetInNameplates {
            get {
                return ResourceManager.GetString("Loc_TagTargetInNameplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The element that the tag should target in nameplates. ähnelt.
        /// </summary>
        public static string Loc_TagTargetInNameplates_Description {
            get {
                return ResourceManager.GetString("Loc_TagTargetInNameplates_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target Chat Types ähnelt.
        /// </summary>
        public static string Loc_TargetChatTypes {
            get {
                return ResourceManager.GetString("Loc_TargetChatTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines for which chat type the chat features of this tag should be enabled for. ähnelt.
        /// </summary>
        public static string Loc_TargetChatTypes_Description {
            get {
                return ResourceManager.GetString("Loc_TargetChatTypes_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Include undefined Chat Types ähnelt.
        /// </summary>
        public static string Loc_TargetChatTypesIncludeUndefined {
            get {
                return ResourceManager.GetString("Loc_TargetChatTypesIncludeUndefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When enabled the Tag will apply to all Chat messages that has not a defined type.
        ///This case can happen either if the Game updates and the Enumeration of all Chat Types gets invalid due to shifted values, or plugins creates a custom chat type for whatever reason. ähnelt.
        /// </summary>
        public static string Loc_TargetChatTypesIncludeUndefined_Description {
            get {
                return ResourceManager.GetString("Loc_TargetChatTypesIncludeUndefined_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        public static string Loc_Text {
            get {
                return ResourceManager.GetString("Loc_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The text that will be displayed. ähnelt.
        /// </summary>
        public static string Loc_Text_Description {
            get {
                return ResourceManager.GetString("Loc_Text_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text properties ähnelt.
        /// </summary>
        public static string Loc_TextCategory {
            get {
                return ResourceManager.GetString("Loc_TextCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Color ähnelt.
        /// </summary>
        public static string Loc_TextColor {
            get {
                return ResourceManager.GetString("Loc_TextColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The color of the text. ähnelt.
        /// </summary>
        public static string Loc_TextColor_Description {
            get {
                return ResourceManager.GetString("Loc_TextColor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Glow color ähnelt.
        /// </summary>
        public static string Loc_TextGlowColor {
            get {
                return ResourceManager.GetString("Loc_TextGlowColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The glow color of the text. ähnelt.
        /// </summary>
        public static string Loc_TextGlowColor_Description {
            get {
                return ResourceManager.GetString("Loc_TextGlowColor_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use priorized icons ähnelt.
        /// </summary>
        public static string Loc_UsePriorizedIcons {
            get {
                return ResourceManager.GetString("Loc_UsePriorizedIcons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This option checked will force a set of status icons to be priorized over job icons, if you enabled job icons.
        ///When disabled, only the disconnected status icon is priorized. ähnelt.
        /// </summary>
        public static string Loc_UsePriorizedIcons_Description {
            get {
                return ResourceManager.GetString("Loc_UsePriorizedIcons_Description", resourceCulture);
            }
        }
    }
}
